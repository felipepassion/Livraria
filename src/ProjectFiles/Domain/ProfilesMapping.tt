<# if (entities.Any()) {
	foreach(var namespaces in groupEntities) {
		            var aggregateName = namespaces.Key.Split('.').FirstOrDefault(x=>x.EndsWith("Agg"));
	var AggName2 = namespaces.Key.Split('.').First(x=>x.EndsWith("Agg"));
#>
namespace <#= namespaces.Key.Replace(".Entities",".Profiles") #>;

using Entities;
using AutoMapper;
using Application.DTO.Aggregates.<#= AggName2 #>.Requests;

public partial class <#= aggregateName #>Profile : Profile
{
	public <#= aggregateName #>Profile()
	{
<# foreach (var entity in namespaces.OrderBy(x=>x.Name.Length)) 
{#>
		CreateMap<<#= entity.Name #>DTO, <#= entity.Name #>>().ReverseMap();
<# } #>
	}
}
<# SaveOutputToSubFolder(
	folderName: $@"Aggregates\{AggName}\Profiles", 
	outputFileName: @$"{AggName}Profiles.cs", 
    recreateFileIfExists: true); #>
<# } #>
<# } #>