<#@ include file="..\project.tt" #>
<#
	var AggName = GetMyAggName();
    var aggSettingsList = new List<CodeClass>();
    var projects = new List<Project>(){ FindProject("Domain") };
    //var groupEntities = entities.GroupBy(p => p.Namespace.FullName);
    
    foreach(var project in projects) {
        var myName = project.Name.Split('.').First();
        if(myName == "DefaultTemplate") continue;
        var proj = FindProject(project.Name);
        //var myEntity = GetEntities(project.Name, $"{myName}AggSettings");
        //var attrs = GetAttributesDict(type);
        //if(myEntity != null)
            //aggSettingsList.Add(myEntity);
    }
#>
namespace <#= GetDefaultNamespace() #>.<#= GetCurrentProject().Name #> {
    public static partial class IoCFactory {
       
		public static void InjectDependencies(this IServiceCollection services, IConfiguration configuration) {
        <# if(AggName=="UsersAgg") { #>
    <#= GetDefaultNamespace() #>.Users.Identity.Infra.IoC.IoCFactory.Current.Configure(configuration, services);
<# } #>
<# foreach (var project in projects
    .OrderBy(x=> x.Name)) {
var aggName = project.Name.Replace(".Domain",""); #>
    <#= GetDefaultNamespace() #>.<#= aggName #>.Infra.IoC.IoCFactory.Current.Configure(configuration, services);
<# } #>
            Niu.Nutri.Core.Infra.IoC.IoCFactory.Current.Configure(configuration, services);
		}

        public static void OnAppInitialized(this WebApplication app)
        {
            using (var scope = app.Services.CreateScope())
            {
                var logProvider = scope.ServiceProvider.GetRequiredService<Niu.Nutri.CrossCutting.Infra.Log.Providers.ILogProvider>();
                logProvider.Write(new Niu.Nutri.CrossCutting.Infra.Log.Entries.LogEntry("------> APP | <#= GetCurrentProject().Name #> | STARTED <------", action: "OnAppInitialized"));
            }
        }
    }
}