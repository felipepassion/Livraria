@using Niu.Nutri.Livraria.Application.DTO.Aggregates.LivrariaAgg.Requests;
@using Niu.Nutri.Livraria.Enumerations

@inherits BaseCadastro<LivrariaLiquidDTO>

<div class="container-informations screen">
    <div class="box-inputs">
        <div class="input-secondary">
            <ButtonsGroup ToItemString="DateButtonsTypeExtensions.ToString"
                          BtnClass="mealBtn"
                          SelectedValue="DateButtonsType.Today"
                          OnBtnClick="OnClick"
                          @bind-value="this.Type"
                          @bind-value:after="()=>OnClick(Type)"
                          Items="Enum.GetValues<DateButtonsType>()" />
        </div>

        <div class="input-secondary">
            <div class="input-secondary-item">
                <BirthDateInputs BtnClass="mealDate" Disabled="!this._showCustomDate" @bind-Value="this.Model.Date" />
                <div class="este-campo-obrigatrio-1 valign-text-middle inter-normal-sonic-silver-10px">
                    <ValidationMessage For="@(() => Model.Date)"></ValidationMessage>
                </div>
            </div>

        </div>
    </div>
</div>

@code {
    bool _showCustomDate;
    DateButtonsType Type { get; set; }

    protected override Task OnInitializedAsync()
    {
        this.CadastroModalContext.ModalTitle = "Data da Ingestão";
        return base.OnInitializedAsync();
    }

    async Task OnClick(DateButtonsType type)
    {
        switch (type)
        {
            case DateButtonsType.Yesterday:
                Model.Date = DateOnly.FromDateTime(DateTime.Now.AddDays(-1));
                break;
            case DateButtonsType.Today:
                Model.Date = DateOnly.FromDateTime(DateTime.Now);
                break;
            case DateButtonsType.Custom:
                Model.Date = null;
                break;
            default:
                throw new NotImplementedException(type.ToString());
        }
        _showCustomDate = Model.Date == null;
        this.StateHasChanged();
    }
}
