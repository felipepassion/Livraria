@using Niu.Nutri.Chat.Application.DTO.Aggregates.ChatAgg.Requests
@using Niu.Nutri.Chat.Enumerations
@using Niu.Nutri.Users.Application.DTO.Aggregates.UsersAgg.Requests

<li class="message-item @(GetMessageClass())">
    <div class="message-content">
        <span class="message-text">@Message.Text</span>
    </div>
    <div class="message-footer">
        <span class="message-time">16:19</span>
        @if (Message.FromId == MyId)
        {
            <img style="width: 20px;" class="@GetMessageStatusClass()" src="@GetTickIcon(Message.Status)" alt="" />
        }
    </div>
</li>

@code {
    [Parameter] public required ConversationMessageDTO Message { get; set; }
    [Parameter] public required int? MyId { get; set; }
    [Parameter] public UserDTO? ToUser { get; set; }

    private string GetMessageStatusClass()
    {
        if (Message.FromId == MyId)
        {
            return Message.Status switch
            {
                MessageStatus.Sent => "sent",
                MessageStatus.Read => "read",
                _ => "sent"
            };
        }

        if (ToUser != null && Message.FromId == ToUser.Id)
        {
            return Message.Status switch
            {
                MessageStatus.Received => "received",
                MessageStatus.Read => "read",
                _ => "received"
            };
        }

        return "";
    }

    private string GetMessageClass()
    {
        var isMyMessage = this.Message.FromId == MyId;
        return isMyMessage ? "mine" : string.Empty;
    }

    private string GetTickIcon(MessageStatus? status)
    {
        return status switch
        {
            MessageStatus.Sent => "./icons/chat/single-tick.svg",
            MessageStatus.Read => "./icons/chat/read-tick.svg",
            _ => "./icons/chat/single-tick.svg"
        };
    }
}
