@inherits InputBase<string>
@inject IJSRuntime JsRuntime

<input id="@Id" class="@Class" placeholder="@PlaceHolder" 
    @ref="inputElement" 
    @bind="CurrentValue" 
    @oninput="EventCallback.Factory.CreateBinder<string>(this, __value => CurrentValueAsString = __value, CurrentValueAsString)" />

@code {
    [Parameter] public string Id { get; set; }
    [Parameter] public string Class { get; set; }
    [Parameter] public string PlaceHolder { get; set; }

    ElementReference inputElement;

    protected override bool TryParseValueFromString(string value, out string result, out string validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRuntime.InvokeVoidAsync("addCpfCnpjMask", inputElement);
        }
    }
}