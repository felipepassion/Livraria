<div class="pagination">
    <img src="/Images/Icons/seta-voltar.svg" @onclick="PrevPage" />

    @* Caso haja mais de 7 páginas e a página ativa seja a primeira *@
    @if (TotalPages > 7 && ActivePage < 3)
    {
        @for (int i = 0; i <= 5; i++)
        {
            var currentLoopValue = i;

            <button class="pagination__page-button @(i == ActivePage ? "active" : "" )" @onclick="@(e => OnPageChange(currentLoopValue))">
                @(i + 1)
            </button>
        }

        <button class="pagination__page-button" @onclick="@(e => OnPageChange(TotalPages.Value - 1))">
            @(TotalPages)
        </button>
    }
    @* Caso haja mais de 7 páginas e a página ativa não seja a primeira e esteja no meio *@
    else if (TotalPages > 7 && ActivePage >= 3 && ActivePage <= TotalPages - 4)
    {
        var startPage = ActivePage - 2;
        var endPage = ActivePage + 2;

        <button class="pagination__page-button" @onclick="@(e => OnPageChange(0))">
            @(1)
        </button>

        @for (int i = startPage; i <= endPage; i++)
        {
            var currentLoopValue = i;

            <button class="pagination__page-button @(i == ActivePage ? "active" : "" )" @onclick="@(e => OnPageChange(currentLoopValue))">
                @(i + 1)
            </button>
        }

        <button class="pagination__page-button" @onclick="@(e => OnPageChange(TotalPages.Value - 1))">
            @(TotalPages)
        </button>
    }
    @* Caso haja mais de 7 páginas e a página ativa esteja entre as últimas *@
    else if (TotalPages > 7 && ActivePage > (TotalPages.Value - 4))
    {
        <button class="pagination__page-button" @onclick="@(e => OnPageChange(0))">
            @(1)
        </button>

        @for (int i = (TotalPages.Value - 6); i <= (TotalPages.Value - 1); i++)
        {
            var currentLoopValue = i;

            <button class="pagination__page-button @(i == ActivePage ? "active" : "" )" @onclick="@(e => OnPageChange(currentLoopValue))">
                @(i + 1)
            </button>
        }
    }
    @* Caso haja até 7 páginas, exibe todas *@
    else
    {
        @for (int i = 0; i < TotalPages; i++)
        {
            var currentLoopValue = i;

            <button class="pagination__page-button @(i == ActivePage ? "active" : "" )" @onclick="@(e => OnPageChange(currentLoopValue))">
                @(i + 1)
            </button>
        }
    }

    <img src="/Images/Icons/seta-voltar.svg" style="transform: rotate(180deg);" @onclick="NextPage" />
</div>

@code {
    [Parameter] public Func<int, Task>? OnPageChangedExternalEvent { get; set; }
    [Parameter] public int? TotalPages { get; set; } = 0;

    [Parameter] public int ActivePage { get; set; } = 0;

    public int? CurrentPage => this.ActivePage;

    async Task OnPageChange(int SelectedPage)
    {
        this.ActivePage = SelectedPage;
        if (this.OnPageChangedExternalEvent != null)
            await this.OnPageChangedExternalEvent(this.ActivePage);
    }

    async Task NextPage()
    {
        if (ActivePage + 1 >= TotalPages) return;

        await OnPageChange(ActivePage + 1);
    }

    async Task PrevPage()
    {
        if (ActivePage - 1 < 0) return;

        await OnPageChange(ActivePage - 1);
    }
}