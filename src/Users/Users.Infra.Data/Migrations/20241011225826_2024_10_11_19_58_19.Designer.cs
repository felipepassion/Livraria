// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Niu.Nutri.Users.Infra.Data.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Niu.Nutri.Users.Infra.Data.Migrations
{
    [DbContext(typeof(UsersAggContext))]
    [Migration("20241011225826_2024_10_11_19_58_19")]
    partial class _2024_10_11_19_58_19
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.SystemSettingsAgg.Entities.SystemPanel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("SystemPanel", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.SystemSettingsAgg.Entities.SystemPanelGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("SystemPanelGroup", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.SystemSettingsAgg.Entities.SystemPanelSubItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActionButton")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubItem")
                        .HasColumnType("boolean");

                    b.Property<bool>("LinkDireto")
                        .HasColumnType("boolean");

                    b.Property<int>("SystemPanelId")
                        .HasColumnType("integer");

                    b.Property<int?>("SystemPanelSubItemId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SystemPanelId");

                    b.ToTable("SystemPanelSubItem", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<bool?>("CanUpdatePassword")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CurrentStep")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Document")
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Gender")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool?>("NeedResetPassword")
                        .HasColumnType("boolean");

                    b.Property<bool?>("NeedSendOnboardingMail")
                        .HasColumnType("boolean");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("text");

                    b.Property<bool?>("RegisterDone")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("UserContact");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserContactNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserContactId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserContactId");

                    b.ToTable("UserContactNumber");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserCurrentAccessSelected", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserCurrentAccessSelected");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CurrentStep")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InitialPage")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPrivateProfile")
                        .HasColumnType("boolean");

                    b.Property<bool?>("RegisterDone")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShowSideBar")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserProfileAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanInsert")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanList")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CurrentStep")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDirectLink")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubItem")
                        .HasColumnType("boolean");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<bool?>("RegisterDone")
                        .HasColumnType("boolean");

                    b.Property<int?>("SystemPanelGroupId")
                        .HasColumnType("integer");

                    b.Property<int?>("SystemPanelId")
                        .HasColumnType("integer");

                    b.Property<int?>("SystemPanelSubItemId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SystemPanelGroupId");

                    b.HasIndex("SystemPanelId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileAccess");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserProfileList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CurrentStep")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool?>("RegisterDone")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfileList");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UsersAggSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AutoSaveSettingsEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersAggSettings");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Identity.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("NeedResetPassword")
                        .HasColumnType("boolean");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int?>("RecoverPasswordCode")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("RecoverPasswordCodeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("aspnetusers", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("SystemPanelGroupSystemPanel", b =>
                {
                    b.Property<int>("GroupOfMenusId")
                        .HasColumnType("integer");

                    b.Property<int>("SubItemsId")
                        .HasColumnType("integer");

                    b.HasKey("GroupOfMenusId", "SubItemsId");

                    b.HasIndex("SubItemsId");

                    b.ToTable("SystemPanelGroupSystemPanel", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("UserProfileListUserProfile", b =>
                {
                    b.Property<int>("AccessesListId")
                        .HasColumnType("integer");

                    b.Property<int>("UserProfilesId")
                        .HasColumnType("integer");

                    b.HasKey("AccessesListId", "UserProfilesId");

                    b.HasIndex("UserProfilesId");

                    b.ToTable("UserProfileListUserProfile");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.SystemSettingsAgg.Entities.SystemPanelSubItem", b =>
                {
                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.SystemSettingsAgg.Entities.SystemPanel", null)
                        .WithMany("SubItems")
                        .HasForeignKey("SystemPanelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserContact", b =>
                {
                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.User", null)
                        .WithOne("Contact")
                        .HasForeignKey("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserContact", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserContactNumber", b =>
                {
                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserContact", null)
                        .WithMany("Contacts")
                        .HasForeignKey("UserContactId");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserCurrentAccessSelected", b =>
                {
                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.User", null)
                        .WithOne("SelectedAccess")
                        .HasForeignKey("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserCurrentAccessSelected", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserProfileId");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserProfileAccess", b =>
                {
                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.SystemSettingsAgg.Entities.SystemPanelGroup", null)
                        .WithMany("UserProfileAccesses")
                        .HasForeignKey("SystemPanelGroupId");

                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.SystemSettingsAgg.Entities.SystemPanel", null)
                        .WithMany("AccessesOfMyProfile")
                        .HasForeignKey("SystemPanelId");

                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserProfile", null)
                        .WithMany("Accesses")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserProfileList", b =>
                {
                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.User", null)
                        .WithMany("Accesses")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UsersAggSettings", b =>
                {
                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Niu.Nutri.Users.Identity.ApplicationUser", b =>
                {
                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Niu.Nutri.Users.Identity.ApplicationUser", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemPanelGroupSystemPanel", b =>
                {
                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.SystemSettingsAgg.Entities.SystemPanelGroup", null)
                        .WithMany()
                        .HasForeignKey("GroupOfMenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.SystemSettingsAgg.Entities.SystemPanel", null)
                        .WithMany()
                        .HasForeignKey("SubItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserProfileListUserProfile", b =>
                {
                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserProfileList", null)
                        .WithMany()
                        .HasForeignKey("AccessesListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserProfilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.SystemSettingsAgg.Entities.SystemPanel", b =>
                {
                    b.Navigation("AccessesOfMyProfile");

                    b.Navigation("SubItems");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.SystemSettingsAgg.Entities.SystemPanelGroup", b =>
                {
                    b.Navigation("UserProfileAccesses");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.User", b =>
                {
                    b.Navigation("Accesses");

                    b.Navigation("Contact")
                        .IsRequired();

                    b.Navigation("SelectedAccess")
                        .IsRequired();
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserContact", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities.UserProfile", b =>
                {
                    b.Navigation("Accesses");
                });
#pragma warning restore 612, 618
        }
    }
}
