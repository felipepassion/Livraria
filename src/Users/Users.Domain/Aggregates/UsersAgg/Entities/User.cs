using Niu.Nutri.Core.Application.DTO.Attributes;
using Niu.Nutri.Core.Domain.Aggregates.CommonAgg.Entities;
using Niu.Nutri.Core.Domain.Attributes.T4;
using Niu.Nutri.Users.Enumerations;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Niu.Nutri.Users.Domain.Aggregates.UsersAgg.Entities
{
    [EndpointsT4(EndpointTypes.HttpAll), MigrationOrder(1),
        H1("REGISTER USER AND PROFILE ACCESSES"),
        HideTitleOnHeader,
        AutoGenerateDefaultFiles,
        H2("User Registration")]
    [Steppable(1)]
    public class User : SteppableEntity
    {
        public User()
        {
        }

        [Step(1)]
        [RequiredT4]
        [Title, DisplayOnList(2), NullableProperty]
        public string? Name { get; set; }

        [Step(1)]
        [DisplayOnList(4)]
        public DateOnly? BirthDate { get; set; } = null!;

        [Step(1)]
        [DisplayOnList(5)]
        public GenderEnum Gender { get; set; } = GenderEnum.M;

        public bool NeedResetPassword { get; set; }
        
        [NullableProperty]
        public string? ProfilePicture { get; set; }

        public bool NeedSendOnboardingMail { get; set; }

        [NullableProperty]
        public string? Document { get; set; }

        [OneToOne, Subtitle]
        public UserContact Contact { get; set; } = new UserContact();

        [NullableProperty, Step(1)]
        public string? UserName { get; set; }

        [NullableProperty, NotMapped, Step(1)]
        public string? Password { get; set; }

        [Step(1)]
        [DisplayOnList(8), Required]
        public bool CanUpdatePassword { get; set; }

        [OneToOne, IgnoreValidation, DettachNavigationProperty, NullableProperty]
        public UserCurrentAccessSelected SelectedAccess { get; set; }

        [ListingPicker, AttatchOnUpdate]
        public List<UserProfileList>? Accesses { get; set; } = new List<UserProfileList>();
    }
}
