// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Niu.Nutri.Livraria.Infra.Data.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Niu.Nutri.Livraria.Infra.Data.Migrations
{
    [DbContext(typeof(LivrariaAggContext))]
    [Migration("20241202044915_2024_12_2_1_49_7")]
    partial class _2024_12_2_1_49_7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FriendlyName")
                        .HasColumnType("text");

                    b.Property<string>("Xml")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DataProtectionKeys", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Assunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("CodAs");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deletado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdExterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Assunto");
                });

            modelBuilder.Entity("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("CodAu");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deletado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IdExterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.LivrariaAggSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deletado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IdExterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LivrariaAggSettings");
                });

            modelBuilder.Entity("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Codl");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnoPublicacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deletado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Edicao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdExterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Livro_Assunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Assunto_CodAut")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deletado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IdExterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Livro_Codl")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Assunto_CodAut");

                    b.HasIndex("Livro_Codl")
                        .IsUnique();

                    b.ToTable("Livro_Assunto");
                });

            modelBuilder.Entity("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Livro_Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Autor_CodAut")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deletado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IdExterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Livro_Codl")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Autor_CodAut");

                    b.HasIndex("Livro_Codl")
                        .IsUnique();

                    b.ToTable("Livro_Autor");
                });

            modelBuilder.Entity("Niu.Nutri.Livraria.Domain.Aggregates.UsersAgg.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deletado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IdExterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Livro_Assunto", b =>
                {
                    b.HasOne("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Assunto", "Assunto")
                        .WithMany()
                        .HasForeignKey("Assunto_CodAut")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Livro", "Livro")
                        .WithOne("LivroAssunto")
                        .HasForeignKey("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Livro_Assunto", "Livro_Codl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Livro_Autor", b =>
                {
                    b.HasOne("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("Autor_CodAut")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Livro", "Livro")
                        .WithOne("LivroAutor")
                        .HasForeignKey("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Livro_Autor", "Livro_Codl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Niu.Nutri.Livraria.Domain.Aggregates.LivrariaAgg.Entities.Livro", b =>
                {
                    b.Navigation("LivroAssunto")
                        .IsRequired();

                    b.Navigation("LivroAutor")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
